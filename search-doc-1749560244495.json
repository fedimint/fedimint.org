[{"title":"Bitcoin Explained with Ruben Somsen about federated e-cash","type":0,"sectionRef":"#","url":"/blog/bitcoin-explained-22","content":"An episode of Bitcoin Explained with Ruben Somsen, recorded in January 2022 all about federated eCash The You Tube page.","keywords":"","version":null},{"title":"Can Fedimints Help Bitcoin Scale To The World?","type":0,"sectionRef":"#","url":"/blog/bitcoin-mag-agfm","content":"Alex Gladstein provides a detailed walk through of the history of eCash, the early days of Fedimint and the potential of Federated Chaumian eCash to provide a highly scalable community custody model for bitcoin. Check out the full article on Bitcoin Magazine.","keywords":"","version":null},{"title":"Fedimint – The Evolution Of Bitcoin Custody","type":0,"sectionRef":"#","url":"/blog/BitcoinMag-ONFM","content":"Obi Nwosu provides an overview of Fedimint as a second party custody model with the power to transform self custody and community banking. Check out the full article here.","keywords":"","version":null},{"title":"Federated Chaumian Mints Provide A Way For Bitcoin Users To Distribute Trust","type":0,"sectionRef":"#","url":"/blog/bitcoin-mag-mb","content":"Marty Bent provides an overview of Eric Sirion's and Obi Nwosu's talks at Bitcoin Miami in 2022 and his excitement around the build out of the technology. Check out the full article on Bitcoin Magazine.","keywords":"","version":null},{"title":"Blockstream Announces Support for Minimint!","type":0,"sectionRef":"#","url":"/blog/blockstream-mm","content":"This article provides an overview of the funding provided to Eric Sirion for the development of Minimint. Full link to the article on the Blockstream Medium Site","keywords":"","version":null},{"title":"Blockstream Research Update on Fedimint","type":0,"sectionRef":"#","url":"/blog/blockstream-minimint","content":"An update on the research supported by Blockstream on the Fedimint opensource protocol and how it has developed over the last year. Check out the full article here.","keywords":"","version":null},{"title":"Citadel Dispatch 45 - The future of mobile lightning wallets","type":0,"sectionRef":"#","url":"/blog/Citadel-Dispatch-45","content":"Eric Sirion (representing Fedimints) appeared alongside @fiatjaf and @akumaigorodski to discuss scaling mobile lightning wallets with eCash and hosted channels. Check out the full episode on Bitcoin TV here","keywords":"","version":null},{"title":"Improving Bitcoin Privacy with Federated eCash @ Adopting Bitcoin","type":0,"sectionRef":"#","url":"/blog/adopting21","content":"Eric Sirion, talks about the opportunities to improve bitcoin privacy through the adoption of Federated eCash systems and how integrating with lightning provides an interesting set of trade offs for privacy in spending and community banking. Check out the video on bitcoin TV here.","keywords":"","version":null},{"title":"Eric and Joschi on Stephan Livera Podcast 651","type":0,"sectionRef":"#","url":"/blog/eric-joschi-slp651","content":"Eric and Joschi discuss the latest updates on Fedimint 0.7, focusing on Iroh integration, LNURL enhancements, and the implications for Bitcoin privacy and community custody, on Stephan Livera Podcast Episode 651. YouTube link","keywords":"","version":null},{"title":"Eric Sirion on Stephan Livera Podcast 331","type":0,"sectionRef":"#","url":"/blog/eric-slp331","content":"Eric discusses the latest progress on MiniMint and the use of Federated Mints for Bitcoin scaling and privacy, on Stephan Livera Podcast Episode 331. You tube link.","keywords":"","version":null},{"title":"Federated Chaumian Mints on Lightning a Twitter Spaces Discussion","type":0,"sectionRef":"#","url":"/blog/fed-cm-spaces","content":"A recording of a Bitcoin Magazine Twitter space exploring the use of Federated Chaumian Mints on lightning. You tube link to a recorded twitter spaces in December 2021 on the operation of Chaumian Mints","keywords":"","version":null},{"title":"HCPP21 interview with elsirion and smuggler","type":0,"sectionRef":"#","url":"/blog/hcpp-21","content":"An interview from HCPP21 with smuggler and elsirion about both SCRIT and MiniMint. Covers the differences in design and philosophy, why these platforms should be considered and where this might go in the future. The You Tube page.","keywords":"","version":null},{"title":"What is Fedimint - Juan en Cripto","type":0,"sectionRef":"#","url":"/blog/fedimint-juancripto","content":"Juan en Cripto interview with Obi Nwosu discussing how Fedimint can help scale to bitcoin to billions Here's the link to view on You Tube.","keywords":"","version":null},{"title":"Honey Badger Byzantine Fault Tolerant Consensus","type":0,"sectionRef":"#","url":"/docs/CommonTerms/AlephBFTConsensus","content":"Honey Badger Byzantine Fault Tolerant Consensus info This guide has been developed as a community project and is a live document. We would appreciate any feedback you may have and you can submit edits, corrections and pull requests through the link at the bottom of each page. Because it takes such a central part in a federated mint we will begin with explaining the properties of Byzantine Fault Tolerant (BFT) consensus algorithms. A byzantine fault not only allows a party to go offline, but also to maliciously continue participating in the protocol. In the following we will use n as the total number of participants in a protocol and f as the maximum amount of faulty ones among them. We define a BFT consensus algorithm as an algorithm that allows all honest parties to agree on a common set of items as long as fewer than f + 1 of the participants are malicious. These items may be contributed by any participant and there should be no risk of targeted censorship of items. The BFT consensus algorithm used by Fedimint is AlephBFT. We will mainly use it as a reference for BFT consensus properties but note that similar protocols exist (most notably Dumbo and hybrids built on top of it). We generally assume the consensus runs in rounds, producing a common subset of the contributions made by the participants. At the start of each round each participant i is expected to propose a set of items Ci to the consensus. After the BFT consensus algorithm has finished (note: this involves a lot of back-and-forth communication which we ignore for now) every honest participant learns the same subset C ⊆ C1,…,Cn The consensus set C contains at least n − f contributions from different participants. Note how this implies that if more than f participants propose the same item, the said item is guaranteed to be included in the next consensus output. The consensus protocols we are discussing, asynchronous ones, can only handle about n/3 faulty nodes, so this will also be our assumption when building our protocol on top unless stated otherwise.","keywords":"","version":"Next"},{"title":"Blind Signatures & Chaumian eCash","type":0,"sectionRef":"#","url":"/docs/CommonTerms/Blind Signatures","content":"Blind Signatures &amp; Chaumian eCash info This guide has been developed as a community project and is a live document. We would appreciate any feedback you may have and you can submit edits, corrections and pull requests through the link at the bottom of each page. The canonical explanation of blind signatures was given by David Chaum in terms of imprinting a signature on a message using carbon copy paper. As highlighted in the figure above, imagine obtaining a signature on a document as follows: Create a document and seal the document into an envelope along with carbon copy paper.You pass the envelope to the signer who can sign the outside of the envelope.This creates an internal signature onto the document from the carbon paper. .If you were to reveal your document at a later date, the signer could confirm that they did indeed sign that document. This is the concept utilized inside eCash, allowing an eCash mint to issue &quot;IOUs&quot; that it can confirm are valid, whilst retaining the privacy of the user. A user can present a mint with a random identifier and request a blind signature from the mint. The mint signs different denominations with different private keys (for example a 10k Sats private key, a 5k sats private key and so on). So when a deposit (lets say 10,000 satoshis) is made, the user presents the mint with a random identifier and requests a blind signature with their 10,000 satoshi private key. These two piece of data make up an eCash token. When it comes time to redeem these satoshis, the user provides the mint with the eCash token and it performs two checks: The mint confirms the signature was made with their 10,000 satoshi private key.The mint checks it has not previously redeemed an eCash token with this unique reference number. If both of these checks pass then the eCash token is accepted. Until this redemption is made the mint is unaware of the unique reference number on the eCash token, as a blind signing algorithm was used. This means that the mint is unable to ascertain the following information: Whether the individual redeeming the token was the same individual who minted the token.What the number of tokens held by any individual user are. This is the basis of the strong privacy claims in eCash.","keywords":"","version":"Next"},{"title":"eCash Tokens and fm-BTC","type":0,"sectionRef":"#","url":"/docs/CommonTerms/eCashToken","content":"eCash Tokens and fm-BTC info This guide has been developed as a community project and is a live document. We would appreciate any feedback you may have and you can submit edits, corrections and pull requests through the link at the bottom of each page. Throughout the guide we refer to eCash tokens, fm-BTC (Fedimint BTC) or fm-sats (Fedimint satoshis) as the currency used within the Fedimint. These terms have been chosen to represent the fact that the circulating currency in the Fedimint is not on-chain bitcoin1, but a claim on bitcoin that is controlled by the federation. In reality the eCash tokens are claims against the bitcoin that is held in a multi-signature vault by the federation guardians. See What is a Fedimint. The fm-BTC, therefore, is a means for the federation to keep track of the outstanding claims on the bitcoin it holds. These claims are not cryptographically enforced, but instead rely on honest federation guardians to honor the withdrawals. 1 On-chain referring to bitcoin that is unencumbered on the bitcoin time chain with the private keys controlled by the user.","keywords":"","version":"Next"},{"title":"Shamir Secret Sharing","type":0,"sectionRef":"#","url":"/docs/CommonTerms/ShamirSecret","content":"Shamir Secret Sharing info This guide has been developed as a community project and is a live document. We would appreciate any feedback you may have and you can submit edits, corrections and pull requests through the link at the bottom of each page. Where users need to back up data or keys to the federation, Fedimint utilizes the popular and time tested algorithm for Shamir Secret Sharing. This allows data to be broken up into discrete shards, which can be placed with different parties and reassembled only if a threshold of the shards can be found.","keywords":"","version":"Next"},{"title":"How do backups work?","type":0,"sectionRef":"#","url":"/docs/FAQs/Backups","content":"","keywords":"","version":"Next"},{"title":"How are user backups and recoveries managed?​","type":1,"pageTitle":"How do backups work?","url":"/docs/FAQs/Backups#how-are-user-backups-and-recoveries-managed","content":"It is envisaged that after joining a federation, which only requires scanning a QR code provided by a federation guardian, the user will likely be asked to enter their name or an easily memorable piece of information which can be provided to the federation during the recovery process. This will be used to encrypt the user private key along with a pepper (secret salt) before it is sharded and backed up to the guardians’ federation servers. If a user loses their phone or can no longer access their eCash notes, they can personally verify themselves to the federation guardians (where there is a strong second party trust relationship with the guardians) and once a quorum of guardians verify the identity of the user, they can send the shards that relate to their name and the user can reconstitute them locally. This process can be thought of as an encrypted password backup to a mini private DropBox or Google Drive run by the federation. In this way, no single guardian can access a user’s credentials, but the loss of federation private keys by a minority of guardians will not prevent the recovery of the user’s private key.  Given the multiple second party trust model that already exists, this approach does not introduce additional risk to users but does provide greater convenience and lower risk than storing it with a third party such as a cloud backup service provider. ","version":"Next","tagName":"h2"},{"title":"Can Fedimint federations help with estate planning and inheritance?​","type":1,"pageTitle":"How do backups work?","url":"/docs/FAQs/Backups#can-fedimint-federations-help-with-estate-planning-and-inheritance","content":"Yes. Building on the recovery process above, it is feasible to securely store one’s will with the Fedimint federation such that it can only be revealed upon your passing.  Even without this, it is possible for suitably appointed executors to a will to provide sufficient evidence to enable the guardians to release the late users eCash notes to them. This process would likely differ in implementation between federations. ","version":"Next","tagName":"h2"},{"title":"What are the future use cases for Fedimint?","type":0,"sectionRef":"#","url":"/docs/FAQs/FutureUseCases","content":"","keywords":"","version":"Next"},{"title":"Is it possible to perform “DeFi” on Fedimints?​","type":1,"pageTitle":"What are the future use cases for Fedimint?","url":"/docs/FAQs/FutureUseCases#is-it-possible-to-perform-defi-on-fedimints","content":"Yes, “FeDeFi” is possible. As the federation is not a blockchain, it is not limited in what can be run on it. In theory, arbitrary code such as P2P exchange, lending, and automated market making could be run within a federation or by a user of federation using their mobile app or computer - all off main chain and off lightning network. In addition, in combination with the lightning network, inter-federation applications such as arbitrage and liquidity mirroring could be performed by users who are connected to multiple federations.  One can think of Fedimint as &quot;trusted smart contracting&quot;. You replace mining with trust in a federation. ","version":"Next","tagName":"h2"},{"title":"Can stablecoins be used on fedmints?​","type":1,"pageTitle":"What are the future use cases for Fedimint?","url":"/docs/FAQs/FutureUseCases#can-stablecoins-be-used-on-fedmints","content":"In theory, stablecoins on Fedimint would be possible. Liquid Tether (L-BTC) or potentially (once mature) Lightning Lab’s Taro would be examples of systems that could be implemented. If included, FeDeFi functionality such as P2P exchange could be used to enable the exchange between Bitcoin and stablecoins within the federation while intra exchange arbitrage over lightning could further enhance this capability. ","version":"Next","tagName":"h2"},{"title":"Are there further use cases?​","type":1,"pageTitle":"What are the future use cases for Fedimint?","url":"/docs/FAQs/FutureUseCases#are-there-further-use-cases","content":"There are an almost unlimited number of ways you could use a Federated mint, given the modular nature of the design, however, some use cases will be better suited than others. We anticipate the community will build and deploy a number of interesting use cases, some examples which have been discussed so far include: Community banking,Remittance systems,Family custody applications, Inheritance protocols, and Distributed computing. ","version":"Next","tagName":"h2"},{"title":"Who invented Fedimint?","type":0,"sectionRef":"#","url":"/docs/FAQs/HistroyofFedimint","content":"Who invented Fedimint? info This guide has been developed as a community project and is a live document. We would appreciate any feedback you may have and you can submit edits, corrections and pull requests through the link at the bottom of each page. The idea behind Fedimint - taking the Chaumian mint protocol and implementing it as a federation - was first conceived and implemented by Eric Sirion (who goes by the alias &quot;elsirion&quot;) in mid 2021. Today, a team of contributors work on the protocol to develop it further, provide on the ground product feedback, and increase adoption.","keywords":"","version":"Next"},{"title":"What does the Federation do?","type":0,"sectionRef":"#","url":"/docs/FAQs/TheFederation","content":"","keywords":"","version":"Next"},{"title":"How does the federation custody the bitcoin?​","type":1,"pageTitle":"What does the Federation do?","url":"/docs/FAQs/TheFederation#how-does-the-federation-custody-the-bitcoin","content":"The federation guardians utilize bitcoin multi signature wallet to manage the on chain funds. These are used to redeem federation eCash notes for bitcoin on chain. ","version":"Next","tagName":"h2"},{"title":"Is there some ability to set limitations on withdrawals if a user requests it (max withdrawal per day, one off, etc.)?​","type":1,"pageTitle":"What does the Federation do?","url":"/docs/FAQs/TheFederation#is-there-some-ability-to-set-limitations-on-withdrawals-if-a-user-requests-it-max-withdrawal-per-day-one-off-etc","content":"This is possible in theory but the most practical implementations would require the introduction of some form of account based system, which would not be compatible with the Chaumian mint protocol. One potential option would be to have the potential to keep a proportion of funds in an account based system where withdrawal thresholds can be enforced while a user’s remaining balance is held in chaumian eCash notes. ","version":"Next","tagName":"h2"},{"title":"Can the federation guardians collude and steal from me?​","type":1,"pageTitle":"What does the Federation do?","url":"/docs/FAQs/TheFederation#can-the-federation-guardians-collude-and-steal-from-me","content":"Guardian collusion is prevented by the configuration of the federation and the selection of its guardians. The federation uses an asynchronous BFT consensus, e.g. 3/5 or 7/13 that would require a majority to collude to steal your coins. Within fedimint, you are explicitly trusting that the federation will not collude. Their incentive not to do so is based on 2nd degree social connections. A fedimint user should personally know at least 1 of their federation guardians and be capable of directly interacting with them. ","version":"Next","tagName":"h2"},{"title":"Can a single bad guardian rewrite my transaction to steal coins?​","type":1,"pageTitle":"What does the Federation do?","url":"/docs/FAQs/TheFederation#can-a-single-bad-guardian-rewrite-my-transaction-to-steal-coins","content":"On receipt of a payment, you will want to swap out the eCash notes you received for new eCash notes. When you submit this transaction, you will specify the input coins provided and the new blind signature requests that you are trading them for. This is constructed as a transaction which includes the inputs, outputs and an associated public key known to the user. The user then signs the transaction on submission. This signature is part of the validation check on the consensus algorithm, as such no inputs or outputs can be changed by a rogue guardian (for example to steal the outputs) without failing the consensus round. ","version":"Next","tagName":"h2"},{"title":"Can guardians prevent me from pegging out?​","type":1,"pageTitle":"What does the Federation do?","url":"/docs/FAQs/TheFederation#can-guardians-prevent-me-from-pegging-out","content":"Yes. If enough guardians collude they can prevent you from pegging out of the federation and receiving bitcoin. Of course if the same amount of guardians collude they can simply steal the coins. This is why &quot;knowing your federation is so important&quot;. ","version":"Next","tagName":"h2"},{"title":"If it uses multisig custodians, what is the fundamental difference to a DPoS blockchain? ​","type":1,"pageTitle":"What does the Federation do?","url":"/docs/FAQs/TheFederation#if-it-uses-multisig-custodians-what-is-the-fundamental-difference-to-a-dpos-blockchain","content":"(Originally asked on Twitter) A - It's not a blockchain - so it doesn't have the severe limitations a blockchain imposes (and which are only needed in very few cases). B - It's not proof of stake (delegated or otherwise) - so having more wealth doesn't confer additional rights to the owner. In DPOS, blocks are produced by whoever stakes the most coins. In Fedimint the transactions are validated by an explicit and unchanging group of federation members. Users opt in to having these people validate their transactions. They would choose to do this because of an existing trust / reputation relationship they have with the federation members. ","version":"Next","tagName":"h2"},{"title":"How are upgrades and changes made to a federation (who decides if the rules change)?​","type":1,"pageTitle":"What does the Federation do?","url":"/docs/FAQs/TheFederation#how-are-upgrades-and-changes-made-to-a-federation-who-decides-if-the-rules-change","content":"An interesting thing to think about is &quot;who decides if the rules change?&quot; Will it usually happen that all federation members agree to an upgrade? Or might it be that only a majority agree and they replace the dissenting members? This is likely to be federation dependent and many governance models could be experimented with and implemented. In any event, for a change to be enacted, it is likely that all guardians must approve it and upgrade their individual servers. ","version":"Next","tagName":"h2"},{"title":"What are the differences between using Liquid vs Fedimint?​","type":1,"pageTitle":"What does the Federation do?","url":"/docs/FAQs/TheFederation#what-are-the-differences-between-using-liquid-vs-fedimint","content":"There are a few differences: The Liquid network is a blockchain,Fedimint is a Federated server system,Liquid uses Confidential Transactions to blind payment amounts but not transaction flowsFedimint uses the Chaumian Mint protocol to create anonymous eCash to make almost all transaction information privateLiquid is designed to enable a few financial institutions to form one federationFedimint is designed to enable arbitrary diverse communities — ranging from friends to companies — to form thousands of independent federationsLiquid doesn't currently support LightningFedimint supports Lightning In summary, compared to Liquid, Fedimint doesn't require a side chain, has better privacy, faster transactions, will be more decentralized, and is interoperable with Lightning. However, the increased privacy means that Fedimint has a greater risk of inflation on bitcoin denominated eCash notes within the system (but not on the Bitcoin main chain). This is mitigated (but not eliminated) by the requirement for second party trust in choice of Fedimint guardians, and in future, the ability to perform attestations. ","version":"Next","tagName":"h2"},{"title":"Why consider community custody?","type":0,"sectionRef":"#","url":"/docs/FAQs/WhyCommunityCustody","content":"Why consider community custody? info This guide has been developed as a community project and is a live document. We would appreciate any feedback you may have and you can submit edits, corrections and pull requests through the link at the bottom of each page. What does the infamous Mt. Gox exchange and the latest cryptocurrency restrictions agreed by the world's regulators have in common? The answer is Bitcoin custody (how and where you secure your bitcoin) - how it was, how it will be if nothing changes, and how it can evolve for the better if we take appropriate action. To understand why, we need to go back to the rise of Bitcoin custodial services. Back in 2013, the Bitcoin exchange space was dominated by Mt. Gox, the exchange colossus based out of Tokyo, Japan and headed up by one Mark Karpeles. Many people held their bitcoin on Mt. Gox until one day, it all vanished. Users could no longer gain access to their hard earned or purchased bitcoin. Due to reasons that are still not fully clear, much of the capital custodied with the platform had disappeared and to this day, the subset that has been recovered is yet to be returned to its rightful owners. In response to the Mt. Gox drama, many exchanges were set up that aimed to bring back trust to the exchange space and make holding bitcoin on an exchange safe. But their success has created a different risk for the exchange customers’ coins. This is because immediately after Mt. Gox, no one trusted exchanges. Users would buy their bitcoin and promptly withdraw it from exchanges as quickly as they could, making self custody the norm. Today user trust in exchanges is strong. Ironically, as a result, the percentage of Bitcoin holders custodying their bitcoin on exchanges is at all time highs. You might think that this is not an issue but this is where the world's regulators, through an organisation called the FATF, come in. FATF, or the Financial Action Task Force, is an unelected international advisory body that issues guidance designed to prevent whatever the majority of countries deem to be financial crimes. Although no country is forced to enact its recommendations, the potentially devastating effects on international trade of ignoring them mean that these proclamations are consistently implemented by almost every country in the world. So when the FATF 'advises' a country to adopt a regulatory stance, you can assume it will almost always be implemented. In June 2019, they issued guidance for cryptocurrencies that included a controversial provision called the “Travel Rule”. This rule advocates that all crypto exchanges and Bitcoin brokers should only allow transfers of crypto to parties that they can properly identify. The challenge is that the identity-less nature of cryptocurrencies makes complying with this guidance, while still allowing customers to withdraw to their own crypto wallets, difficult at best and impossible at worst. So once again, we are heading into a future where huge crypto exchanges prevent their customers from taking ownership of their own coins. But this time it will be due to an over-abundance of regulation as opposed to a lack of it as was the case in the time of Mt. Gox. “But why is holding most of my bitcoin on an exchange a problem?” you may ask. Simply put, if a regulated 3rd party has control of your bitcoin, no matter how trustworthy they might seem, they can be compelled to prevent you from taking custody of your crypto. With the latest FATF rule, we already see countries such as India, South Korea, and Estonia look to fast track regulation to this effect and we can expect more to follow. If left unchecked, the end result could be a majority of bitcoin being stored on a handful of centralised exchanges - barring Bitcoiners from self-sovereignty. This is a concern because Bitcoin only succeeds if all its major constituents - mining, payments, software development, and custody - stay strong and decentralised. For Bitcoin to achieve its potential of separating money from the state and creating a freer, fairer financial world, nothing is more important than reinforcing its decentralized foundations. All the major elements of the Bitcoin ecosystem are significantly decentralised except for one, custody. Right now, the default for most users is to store their censorship resistant decentralised Bitcoin with a few censurable centralised exchanges or custodians. Fedimint is designed to resolve this major chink in the Bitcoin ecosystem’s armour.","keywords":"","version":"Next"},{"title":"How do I join a federation?","type":0,"sectionRef":"#","url":"/docs/FAQs/JoiningAFederation","content":"","keywords":"","version":"Next"},{"title":"Is it possible for a user to connect to multiple federations at the same time?​","type":1,"pageTitle":"How do I join a federation?","url":"/docs/FAQs/JoiningAFederation#is-it-possible-for-a-user-to-connect-to-multiple-federations-at-the-same-time","content":"Although not planned for the first version, there is no reason why a user can not be simultaneously connected to multiple federations. The user would see the list of federations they are a member of and the summary balances of each. The federations that they are a member of will have no way of knowing which other federations the user is a member of and how much is held by the user in each.  This could act to give a user more options to decentralise their trust as well as potentially open up arbitrage opportunities with the use of “FeDeFi” (see “Is it possible to perform “DeFi” on Fedimints?”). ","version":"Next","tagName":"h2"},{"title":"Do I need to go through a KYC (Know Your Customer) process to join a federation?​","type":1,"pageTitle":"How do I join a federation?","url":"/docs/FAQs/JoiningAFederation#do-i-need-to-go-through-a-kyc-know-your-customer-process-to-join-a-federation","content":"No. But it is highly recommended that you only join federations where some or all of the guardians are people that you have a strong pre-existing relationship with or trust in. Rather than KYC this fedimint promotes KYF (Know your Friend or Know your Family). ","version":"Next","tagName":"h2"},{"title":"How do Fedimint transactions work?","type":0,"sectionRef":"#","url":"/docs/GettingStarted/How-FM-Transactions-Work","content":"","keywords":"","version":"Next"},{"title":"Transactions within a Fedimint​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#transactions-within-a-fedimint","content":"This represents how a transaction would settle entirely within the same Fedimint.  ","version":"Next","tagName":"h2"},{"title":"Step 1 : The Invoice​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#step-1--the-invoice","content":"An invoice (in the form of data) is passed from Bob's wallet to Alice's wallet asking for payment to be forwarded for 15,000 sats. ","version":"Next","tagName":"h3"},{"title":"Step 2: Share the notes​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#step-2-share-the-notes","content":"Alice's wallet responds by checking the notes it holds and selecting eCash notes that total 15,000 sats in this case a 10k sats and a 5k sats eCash note. It then forwards these notes to Bob's wallet. ","version":"Next","tagName":"h3"},{"title":"Step 3: Settle the transaction with new eCash notes​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#step-3-settle-the-transaction-with-new-ecash-notes","content":"Bob now has the eCash files and can redeem them from the Fedimint. However, there is a risk that Alice still has the eCash notes copied and could redeem them first. As such the payment is not yet settled. To settle the payment Bob submits the eCash notes to the mint and instead of redeeming for bitcoin, asks to swap them out for fresh eCash notes, in this instance a 15,000 sats eCash note. note During implementation it is suspected that users will not use &quot;pay me in the mint&quot; invoices and would instead always assume they are paying Lightning invoices. ","version":"Next","tagName":"h3"},{"title":"Transactions from Fedimint to Lightning​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#transactions-from-fedimint-to-lightning","content":"In this case the payment is being sent from a Fedimint user to pay a lightning invoice. This works by setting up a situation in which a lightning gateway provider is incentivised to pay the lightning invoice in sats in order to receive a hash pre-image that allows them to claim fm-sats. We will unpack this below.  ","version":"Next","tagName":"h2"},{"title":"Step 1: The lightning invoice​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#step-1-the-lightning-invoice","content":"A lightning merchant (or general recipient) generates a lightning invoice in this case for 10,000 sats. This is actually a Hash Time Lock Contract (HTLC) contract that will provide some secret information - &quot;a hash pre-image&quot; in return for a payment in satoshis. The merchant is in effect &quot;selling a pre-image-A&quot; for sats. ","version":"Next","tagName":"h3"},{"title":"Step 2: Create the incentive to pay​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#step-2-create-the-incentive-to-pay","content":"Alice would like to pay this invoice from her Fedimint wallet, but doesn't run a lightning wallet herself. Instead she creates an equivalent Hash Time Lock Contract (HTLC) that will pay out 10,200 fm-sats to anyone who can supply a pre-image to the contract where the extra 200 fm-sats represent a fee for the service. An important note is that the hash used in this contract is the same hash used in the contract by the merchant linking the contracts together. Here Alice is in effect willing to &quot;buy pre-image-A&quot; for sats+200. ","version":"Next","tagName":"h3"},{"title":"Step 3: Broadcast to Lightning Gateways​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#step-3-broadcast-to-lightning-gateways","content":"The Lightning Gateway, is now incentivized by this arbitrage opportunity to pay this invoice and obtain the pre-image in order to obtain fm-sats plus fee. note There is a process by which the Lightning Gateway needs to become aware of the contract which could either be by direct contact from the user, or by the mint broadcasting available contracts. Yet to be fully defined. ","version":"Next","tagName":"h3"},{"title":"Step 4: Lightning Gateway Pays the Invoice​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#step-4-lightning-gateway-pays-the-invoice","content":"The Lightning Gateway routes a payment, through the lightning network to the merchant paying the invoice and obtaining the pre-image. The &quot;lightning&quot; balance of the Lightning Gateway is now reduced by 10,000 sats. ","version":"Next","tagName":"h3"},{"title":"Step 5: Lightning Gateway settles the mint contract​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#step-5-lightning-gateway-settles-the-mint-contract","content":"The Lightning Gateway now takes that pre-image and uses this to claim the 10,200 fm-sats. The Lightning Gateway's fm-BTC balance is now up 10,200 sats and their net position is up 200 sats. note By linking the HTLCs with the same pre-image between the lightning route and the mint, this allows the Fedimint to spoof a lightning node and extend the route &quot;into the mint&quot;. ","version":"Next","tagName":"h3"},{"title":"Transactions from Fedimint to Other Fedimints​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#transactions-from-fedimint-to-other-fedimints","content":"This transaction represents a payment from a Fedimint to a Fedimint. As a payment between FMs is routed over the lightning network we can also imply in the same use case, how a lightning node to Fedimint payment would be completed. In this instance Alice (in Fedimint 1) will receive a payment of 10,000 sats from Bob (in Fedimint 2).  ","version":"Next","tagName":"h2"},{"title":"Step 1: Alice sells a pre-image​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#step-1-alice-sells-a-pre-image","content":"Alice want's to receive 10,000 sats, but her wallet doesn't have a lightning node. Instead her wallet creates a contract in Fedimint 1 which will sell the pre-image to a hash for 9,800 fm-sats, we'll call this &quot;pre-image-A&quot;. ","version":"Next","tagName":"h3"},{"title":"Step 2: Alice lets Bob know how to pay​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#step-2-alice-lets-bob-know-how-to-pay","content":"Alice now sends Bob a Lightning invoice for 10,000 sats which includes two pieces of important information: a fake endpoint ID associated with Fedimint 1.a route hint to Lightning Gateway A This provides Bob with the information required to pay this invoice over lightning. ","version":"Next","tagName":"h3"},{"title":"Step 3: Bob buys a pre-image​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#step-3-bob-buys-a-pre-image","content":"Bob would love to pay the 10,000 sats, but his wallet doesn't have a lightning node. Instead he follows the previous payment flow and posts a contract to Fedimint 2 that will pay 10,200 fm-sats to buy &quot;pre-image-A&quot; and lets Lightning Gateway B know about it, by providing the invoice with the route hint to Lightning Gateway A. ","version":"Next","tagName":"h3"},{"title":"Step 4: Lightning Gateway B pays Lightning Gateway A​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#step-4-lightning-gateway-b-pays-lightning-gateway-a","content":"Lighting Gateway B routes 10,000 sats over the lightning network to Lightning Gateway A seeking a pre-image! ","version":"Next","tagName":"h3"},{"title":"Step 5: Lightning Gateway A settles in Fedimint 1​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#step-5-lightning-gateway-a-settles-in-fedimint-1","content":"Luckily Lightning Gateway A realizes that he can obtain this pre-image and get paid a 200 fm-sats difference by paying 9,800 fm-sats to the contract (which then goes to Alice). Now Lightning Gateway A has the pre-image. ","version":"Next","tagName":"h3"},{"title":"Step 6: Lightning Gateway A settles with Lightning Gateway B​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#step-6-lightning-gateway-a-settles-with-lightning-gateway-b","content":"LN Gateway A takes the pre-image and uses it to settle the payment with Lightning Gateway B and now receives sats to it's lightning balance sheet. The final balance sheet standing for Lightning Gateway A is: fm-sats: -9,800LN sats: +10,000Net: +200 sats ","version":"Next","tagName":"h3"},{"title":"Step 7: Lightning Gateway B settles in Fedimint 2​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#step-7-lightning-gateway-b-settles-in-fedimint-2","content":"Having the pre-image lightning gateway B now settles the contract held in Fedimint 2, receiving fm-sats for this from Bob. The final balance sheet for Lightning Gateway B is: fm-sats: +10,200LN sats: -10,000Net: +200 sats ","version":"Next","tagName":"h3"},{"title":"Pay Lightning into a Fedimint​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#pay-lightning-into-a-fedimint","content":"The process by which you would make a payment from a lightning wallet into a Fedimint wallet is a simplified case of paying from Mint 2 to Mint 1. If Bob had a lightning wallet, instead of &quot;buying a pre-image&quot; in step 3, he would have skipped directly to step 4 and paid Lightning Gateway A himself. There would also have been no requirement for step 7. ","version":"Next","tagName":"h2"},{"title":"Lightning Routing​","type":1,"pageTitle":"How do Fedimint transactions work?","url":"/docs/GettingStarted/How-FM-Transactions-Work#lightning-routing","content":"You may be wondering - hang on, if I can receive lightning payments and send lightning payments, does that mean I can route lightning payments? The answer is yes, sort of. This will be explored more in the FAQs as it has some interesting implications for privacy and computational use cases. ","version":"Next","tagName":"h3"},{"title":"What is a Chaumian Mint","type":0,"sectionRef":"#","url":"/docs/FAQs/WhatIsChaumianMint","content":"","keywords":"","version":"Next"},{"title":"What is a Federated Mint?​","type":1,"pageTitle":"What is a Chaumian Mint","url":"/docs/FAQs/WhatIsChaumianMint#what-is-a-federated-mint","content":"In a federated mint the required trust is split over multiple parties. It employs a consensus algorithm and threshold cryptography to guarantee both safety and availability even in the case that some parties are compromised. That means if the participants are sufficiently distributed not even a nation state level attacker can harm the federation. Running it anonymously also becomes much more attractive since there is no single party anymore that could run away with the backing funds. ","version":"Next","tagName":"h2"},{"title":"How does it relate to Bitcoin?​","type":1,"pageTitle":"What is a Chaumian Mint","url":"/docs/FAQs/WhatIsChaumianMint#how-does-it-relate-to-bitcoin","content":"Bitcoin is the first asset in human history that can truly be held in a federated manner, meaning only being accessible if a certain quorum of people agrees. It is thus the perfect backing asset for a federated mint. A first, primitive version could work as follows: deposit: A User sends BTC to the federation’s wallet and in turn receives the corresponding amount of eCash notes.transfer: The user can then pay someone else using these notes, which works as follows: The payer selects appropriately many notes and sends them to the payeeThe payee exchanges these notes for new ones using the federated mintOnly then does the payee accept the transaction, as the exchange may fail in case of a double spend withdraw: Finally any user can redeem notes for BTC again. We see that between deposit and withdrawal there can be many internal transactions, so federated mints do not only provide excellent privacy but also scaling. One problem with this primitive version is the enormous centralization pressure it exerts, as two federated mints won’t accept each other’s notes, making big mints more attractive. This can be mitigated by integrating with Lightning. For this the federation needs to support two more operations: ln-send: pay an LN invoice using eCash notes.ln-receive: issue an invoice to a user. Once it is paid the user receives the appropriate amount of eCash notes. With these two operations any federated mint suddenly becomes interoperable with any other Lightning node, including other federated mints. The federation essentially becomes a hosted but federated Lightning wallet. ","version":"Next","tagName":"h2"},{"title":"What about centralization?​","type":1,"pageTitle":"What is a Chaumian Mint","url":"/docs/FAQs/WhatIsChaumianMint#what-about-centralization","content":"Yes, a federated mint requires more trust than a self-hosted Lightning node or on-chain Bitcoin. But we think that the risk can be minimized sufficiently by distributing the federation members. There are many people that can not or do not want to run their own lightning wallet, be it because of fees or maintenance effort. For these a federated mint is much preferable to centralized solutions as it protects user privacy and has no single points of failure. Systemic risks should be sufficiently mitigated by the fact that any willing group of people should be able to start their own federation. ","version":"Next","tagName":"h2"},{"title":"Running a Fedimint","type":0,"sectionRef":"#","url":"/docs/GettingStarted/Running-a-Fedimint","content":"","keywords":"","version":"Next"},{"title":"Deployment Concepts​","type":1,"pageTitle":"Running a Fedimint","url":"/docs/GettingStarted/Running-a-Fedimint#deployment-concepts","content":"Whilst the specific deployment, configuration and tools used to manage a fedimint may differ there are some commonalities that are likely to be familiar across fedimint deployments. Fedimints will utilize a number of fedimint nodes, operated by &quot;guardians&quot;.Fedimint nodes will be connected via public networks and may utilize different anonymous networking protocols or overlay networks for speed, simplicity or security.All fedimint nodes are modular in design.Any particular node may run both core modules (eCash, multisig) as well as 3rd party modules.The specific configuration and module install base of a fedimint node will be driven by the needs of the fedimint community.Fedimint nodes will come to consensus on installed modules. Fedimint guardians, as the custodians of the fedimint nodes, will have responsibility for backing up any private keys and ensuring the physical (or virtual) custody of the hardware on behalf of the community. Each fedimint node would be lightweight in practice, similar to a pruned bitcoin node. There will however, be a linear growth in the storage requirement which whilst small at first will grow as more eCash is spent and redeemed. note Whilst the actual growth will need to be tested in a real life environment, a high usage of ~1 transaction per second, with 10 tokens per transaction, would result in ~10GB a year of storage growth. The form factor of fedimint nodes could be any combination from a number of options including laptops, towers, smartphones, mobile phones, single board systems or remotely operated computers in the cloud - as long as the system can run the bitcoind and fedimintd daemons and connect to the internet. ","version":"Next","tagName":"h2"},{"title":"Deployment UI​","type":1,"pageTitle":"Running a Fedimint","url":"/docs/GettingStarted/Running-a-Fedimint#deployment-ui","content":"The deployment of fedimint, currently utilizes a simple UI which allows a user to view their private key and build a federation by adding additional &quot;peer&quot; private keys from the other federation guardians. This allows the fedimint scripts to collect the appropriate information before automating the remainder of the deployment. This in turn is then to be made accessible via an API to allow additional 3rd party services to innovate on the federation setup and management process. note To be updated with screenshots as the UI is pushed to the project. ","version":"Next","tagName":"h3"},{"title":"Core Technology Components","type":0,"sectionRef":"#","url":"/docs/GettingStarted/TechCompontents","content":"","keywords":"","version":"Next"},{"title":"Chaumian eCash​","type":1,"pageTitle":"Core Technology Components","url":"/docs/GettingStarted/TechCompontents#chaumian-ecash","content":"Chaumian eCash allows the Fedimint to create and redeem IOU notes that represent claims on bitcoin. The technology was originally developed in 1983 by David Chaum and realized through the company Digicash. Digicash, allowed users to purchase $ denominated eCash bank notes, that could be transferred over the internet to perform payments, in effect creating the worlds first internet bank. The process of issuing and redeeming eCash notes was made anonymous through the use of Blind Signatures. This is covered in detail at Definitions and Terms &gt; Blind Signatures &amp; Chaumian eCash. This process relied on a centralized server to confirm authenticity of certificates and eliminate double spend issues, however, the server had no knowledge who the eCash notes belonged to. This allowed users to transact privately on the internet without the bank being aware of the specific transactions and payments made, or the balances held by any specific user. This is very important in a community banking setting where knowing the exact balances of all the people in your local community could expose individuals to physical attacks if the information is leaked or hacked. ","version":"Next","tagName":"h2"},{"title":"Federations​","type":1,"pageTitle":"Core Technology Components","url":"/docs/GettingStarted/TechCompontents#federations","content":"Fedimint is a &quot;federated Chaumian Mint.&quot; This means that the mint is jointly owned and operated by multiple people, we refer to as guardians. This approach has been commercialized by Blockstream in the Liquid Bitcoin side chain. By federating the operation, Fedimint gains several advantages over single server deployment. The bitcoin held in the mint is never subject to the control of a single individual making it harder for a corrupt guardian to steal funds.Increases redundancy as guardians can go offline and transactions will still be processed where a quorum is reached.Changes the regulatory space of the federation as no single individual controls coin issuance and redemption. This replicates the best practice model of multi-signature custody, used in exchanges and custody providers globally. ","version":"Next","tagName":"h2"},{"title":"Lightning Swaps​","type":1,"pageTitle":"Core Technology Components","url":"/docs/GettingStarted/TechCompontents#lightning-swaps","content":"Integration with the lightning network is achieved using lightning swaps that are provided as a service to the users of the mint. A simple way to think about this is by imagining a man with two bags. One bag is full of Fedimint bitcoin, one bag is full of Lightning bitcoin and he is willing to sell either for the other.  This is how lightning gateways work. These users will accept Fedimint bitcoin to pay a lightning invoice on your behalf, or accept incoming lightning invoices and pay you in Fedimint bitcoin. These payments are secured in both the Fedimint and the lightning network using a common Hash Time Lock Contract. This in effect &quot;extends&quot; the lightning route 1 more hop into the federation and ties together the success of both payments. Lightning bitcoin never &quot;transforms&quot; into Fedimint bitcoin, completing the swap is more like a balance sheet exercise for the lightning gateway operator. It is also possible to run multiple lightning gateways on a Fedimint and for any users to become a lightning gateway as long as they run a lightning node. ","version":"Next","tagName":"h2"},{"title":"What is a Fedimint","type":0,"sectionRef":"#","url":"/docs/GettingStarted/What-is-a-Fedimint","content":"","keywords":"","version":"Next"},{"title":"Fedimint Components Structure​","type":1,"pageTitle":"What is a Fedimint","url":"/docs/GettingStarted/What-is-a-Fedimint#fedimint-components-structure","content":"A Fedimint has five functional components (accounts, custody &amp; redemption, backup &amp; recovery, transaction processing, LN Gateway) and three user personas (Guardian, User, Lightning Gateway) as outlined in the figure and with details below.  All of these are supported by three core technology components, discussed in greater detail in &quot;Overview &gt; Technologies used in Fedimint&quot;. ","version":"Next","tagName":"h2"},{"title":"Fedimint Guardians​","type":1,"pageTitle":"What is a Fedimint","url":"/docs/GettingStarted/What-is-a-Fedimint#fedimint-guardians","content":"Fedimint guardians are the technical community members responsible for setting up and running the Federated Chaumian eCash system. They custody and backup funds and are responsible for the minting and redemption of eCash notes, that are claims against the Bitcoin reserves. A fedimint member is explicitly trusting that the federation guardians will not form a majority quorum to collude to steal user funds. The guardians coordinate using a distributed consensus protocol (AlephBFT) which is part of the Fedimint software deployed on personal servers. The consensus mechanism is Asynchronous, Byzantine Fault Tolerant, and can survive and operate even if a minority of individual federation guardians disconnect from the network. If a majority of the federation guardians disconnect, the consensus protocol will halt execution until a quorum of guardians come back online, at which point the consensus will continue. The federation guardians are specific roles within the system that can only be added or removed with consensus of the existing set of guardians. Account &amp; Onboard: The federation guardians will run the Fedimint protocol software stack. This will allow the guardians to generate a &quot;joining a federation QR Code&quot;.Custody &amp; Redemption: The federation guardians will hold private keys to the threshold multi signature contract into which bitcoin is deposited. When a user executes a deposit process they will also blind sign eCash certificates to an amount equivalent to the deposited bitcoin.Backup &amp; Recovery: Federation members will manage the back up of &quot;shards&quot; (individual parts of complete file) of users' wallet data. When a recovery request is made they will manage an out of band process to confirm the authenticity of the recovery request, the identity of the federation member attempting to recover funds, and coordinate with other federation members to reconstruct the shard and recover the user's funds.Transaction Processing: The federation guardians review transactions submitted to the federation to ensure that only valid eCash certificates are redeemed and that new eCash certificates are generated where required (see how do FM transactions work?). ","version":"Next","tagName":"h3"},{"title":"Fedimint Users​","type":1,"pageTitle":"What is a Fedimint","url":"/docs/GettingStarted/What-is-a-Fedimint#fedimint-users","content":"The users of the Fedimint use Fedimint compatible wallet software like Fedi to interact with the Fedimint. We anticipate there will be many different wallet applications, and are intentionally building Fedimint to be compatible across these different wallets. We assume no specific technical knowledge in order for Fedimint users to send and receive Bitcoin through the Fedimint model. Our initial usecase for Fedimint is as an extremely private, federated custodial wallet. Account &amp; Onboard: Users must ensure they are happy with the reputation of the guardians for the chosen Fedimint, then they would simply scan a QR code to connect an account.Custody &amp; Redemption: Users can submit a request to deposit bitcoin, &quot;pegging in&quot;, in exchange for fm-BTC eCash notes or use the fm-BTC eCash notes in their wallet in order to redeem on-chain bitcoin (note: users could also transfer out to themselves via the LN Gateway)Backup &amp; Recovery: The user will encrypt and shard their data to be backed up to the federation by their wallet application.Transaction Processing: The user could submit transactions that transfer fm-BTC to other users. Alternatively the user can redeem transfered fm-BTC for newly issued fm-BTC, settling a paid transaction (see how do FM transactions work?).LN Gateway: As an alternative to transacting inside the Fedimint, a user can create contracts (enforced by the Fedimint consensus) that will pay the lightning gateway persona to pay LN invoices on their behalf or generate lightning invoices to be paid. In principle anyone can become a Fedimint user as long as they have access to the onboarding link / QR code. The onboarding process itself is subject to the specific implementations by the Federations. note The money &quot;fm-BTC&quot; held by the user are actually &quot;digital bearer certificates&quot; or &quot;eCash notes&quot; stored on the users phone. These are not account balances but equivalent to digital banknotes of specific set values. As these are digital, they can be encrypted and backed up. ","version":"Next","tagName":"h3"},{"title":"Lightning Gateway Provider​","type":1,"pageTitle":"What is a Fedimint","url":"/docs/GettingStarted/What-is-a-Fedimint#lightning-gateway-provider","content":"The Lighting Gateway is a Fedimint User who also runs a lightning node. A federation may opt to run its own lightning gateway as well, but we have intentionally architected Fedimint such that any user can act as a lightning gateway to interact with the broader lighting network outside of the mint. The Lightning Gateway monitors the Federation for user requests to pay Lightning invoices or receive lightning payments. To send a lightning payment, the Fedimint User locks eCash notes to a contract which contains a lightning invoice. The lightning gateway can sweep the eCash notes from the contract by paying the lightning invoice. To receive a payment, the Fedimint User broadcasts a tweaked invoice to the lightning gateway. The User reveals the tweak, allowing the gateway to receive the lightning payment, in exchange for eCash notes. Account &amp; Onboard: Similar to a user the Lightning Service provider will need to be comfortable accepting the federations fm-BTC in exchange for providing a liquidity bridge to the lightning network.Custody &amp; Redemption: Similar to the federation guardians, the Lightning Gateway user can use the redemption and deposit service in order to more actively balance fm-BTC, lightning, and on-chain bitcoin balances.Backup &amp; Recovery: As per user persona.Transaction Processing: As per user persona. The Lightning Gateway would also be running additional daemon software to automate the process of accepting contracts for lighting services (more details in FAQs &gt; Lightning Network Integration) There will need to be a market discovery process, by which users of a Fedimint are able to contract with the Lightning Gateways, the specifics of this is still to be documented. It is anticipated there will be a process by which a Lightning Gateway registers its service with the federation to ease discovery, but it would also be possible to have multiple unannounced gateways that users could contract with directly. ","version":"Next","tagName":"h3"},{"title":"Who are the federations?","type":0,"sectionRef":"#","url":"/docs/GettingStarted/Who-are-the-fms","content":"","keywords":"","version":"Next"},{"title":"Know your federation​","type":1,"pageTitle":"Who are the federations?","url":"/docs/GettingStarted/Who-are-the-fms#know-your-federation","content":"There are trade offs to consider when joining a Fedimint. As such it is very important to &quot;know your federation&quot;. Fedimint is an explicit trust model: you are trusting the guardians of your federation not to collude. The incentive for them not to do so is that they have close, trusted relationships with their members, and that the members are capable of socially and physically responding to the guardians in their community should they ever attempt to break the trust model. With this in mind, Fedimint has been designed to be used by pre-existing groups where members already have high levels of trust in each other within a non-commercial context. We refer to this as second party trust, the trust you would be able to place in another set of individuals based on a long standing relationship, reputation, social capital or available local legal recourse (outside of the technical protocol). This goes some way to mitigate the custodial risk involved with Fedimint. For example, I am less likely to steal from my mum, her friends and my brothers than a random stranger on the internet as there will be social consequences to this action that I find incalculably large. This model would likely would include families, friends, small villages and community groups as examples of groups with strong second party relationships. These larger community bodies could even be formalized with constitutions to describe the operations of the federation. This is in contrast to the distant third party relationships offered by an exchange or the first party relationship afforded by self custody. This setup also has the added advantage of often being exempt from most regulatory considerations, where the context is strictly non-commercial. note This doesn't preclude the notion of &quot;commercial&quot; Fedimints existing in the future. As Fedimint is an open protocol, there is nothing stopping these entities being formed. This will have the benefit of decentralizing custody and transaction infrastructure to local levels. By way of example consider two countries: Country A: Has four banks and runs on a closed money system with no competition between banks.Country ₿: Has 100k banks running on an open money system, that allows competition from anyone. Given the intense competition in country ₿ it would always be harder to find and retain customers. As such you might expect the banks to differentiate based on their close ties to the user, reputation, great UX and ability to always place the needs of customers first. Country ₿ is a much better country to be a customer.  The specifics around this trust model and trade offs will be explored in Trade offs &gt; Custodial Risk. ","version":"Next","tagName":"h2"},{"title":"Why Fedimint","type":0,"sectionRef":"#","url":"/docs/GettingStarted/Why-Fedimint","content":"","keywords":"","version":"Next"},{"title":"Community Custody​","type":1,"pageTitle":"Why Fedimint","url":"/docs/GettingStarted/Why-Fedimint#community-custody","content":"Ideally bitcoiners should run their own nodes and custody their own funds. Many people find the technical challenges of running their own nodes and holding their own funds through recovery phrase management prohibitively difficult, and opt into trusting a third party custodian like exchanges or custodial wallets. These users sacrifice their privacy and security in favor of speed and convenience. This represents a systemic risk to the bitcoin network as large quantities of bitcoin are aggregated into single custodians. Fedimint aims to address this by distributing custodianship across millions of communities, making it simple for them to bank themselves. These community focused 'banks' are known as Fedimint Federations. We are building a solution which allows users to onboard to Bitcoin in a manner they find extremely convenient, without sacrificing privacy and security. Fedimint allows bitcoiners to onboard new users, assisting them in their custody and payment model. Instead of referring a new bitcoiner to a third party custodian, you can onboard them yourself as part of a Federation. Put in another way, it allows you to be your mum's / friends / villages bank. We call these close, trusted relationships &quot;2nd party custodians&quot;. Fedimint federation guardians should be individuals you know personally, such as close friends or family members, whom you can directly influence if they ever attempt to breach your trust. This provides bitcoiners with a third option between 3rd party centralized custodians and self custody as shown in the figure below.  Most importantly, Fedimint is interoperable with the Lightning Network. Fedimint users can at any time move their funds into their own self custody lightning wallet. This allows Fedimint users to remain a part of the wider lightning network, making it possible to pay merchants, other users, or even move between Fedimints. As such, a user who previously used a 3rd party custodian for convenience can retain that convenience whilst improving their privacy and control of their finances. note There is a trade off here as you are trusting a federation with your bitcoin. As such it will be important to &quot;know your federation&quot;. ","version":"Next","tagName":"h2"},{"title":"Financial Privacy​","type":1,"pageTitle":"Why Fedimint","url":"/docs/GettingStarted/Why-Fedimint#financial-privacy","content":"Fedimint uses Chaumian eCash notes and blinded signatures to achieve privacy for federation members. Federation guardians cannot correlate inputs and outputs of federation members' transactions, and cannot see the holdings of any individual federation member.  The mint guardians will be aware of: The total amount of bitcoin held in the community multi-sig wallet.The total amount of eCash notes outstanding for redemption. They will be entirely unaware of: The individual account balance of a user (i.e. how many notes a user has).The identity of the user to whom a particular eCash note was issued to.The identity of the user who redeems an eCash note.Any transactions of the note which are made between issuance and redemption. This is among the most important benefits of Fedimint over 3rd party custodians. Today, if you or anyone you transact with uses money through a custodian like an exchange, that custodian can see who you are, who you're paying, where the funds came from, and sometimes where they go afterward. Fedimint guardians see none of this information. ","version":"Next","tagName":"h2"},{"title":"Scaling​","type":1,"pageTitle":"Why Fedimint","url":"/docs/GettingStarted/Why-Fedimint#scaling","content":"The Bitcoin UTXO set, as it exists today, cannot scale to serve billions of users self custodying through personally owned UTXOs. Even using the Lightning Network as a scaling model, it would take years of full blocks to open a single lightning channel each for a billion people. We believe this is a fundamental limit to self custody, and that, at-scale, users will have to aggregate and share ownership of UTXOs either through shared cold storage or as shared lightning channels. The current direction this scaling model has taken is that users opt into using centralized third party custodians to manage their funds or manage their lightning channels/balances. Fedimint provides an alternative solution: federating custody of users' funds, but maintaining interoperability with the lightning network to allow global scale payments outside of an individual Fedimint. Fedimint takes the economic density of an entire community and collapses it into a small number of &quot;gateway&quot; lightning nodes. A great way to understand this is to consider the different levels of detail in a road network connecting multiple towns.  The Fedimint map (right) clearly shows the many different roads that connect different users in a town. You could imagine this as many different direct interactions and commercial activity that remains in town and doesn't clog the &quot;regional road network&quot;. The lightning map (left) represents this regional road network which simply connects to that &quot;town&quot; of activity to a broader network of similar &quot;towns&quot;. If we tried to connect every address in town one, with town two then we would overwhelm the area with inefficient roads. We believe this model will allow us to build a more flexible and scalable and efficient lightning network. note There is some recent research on how to scale lightning that suggests the possibility of widespread use of Fedimint Federations could increase the efficiency of the lightning network while also increasing the potential fees a Lightning Service Provider (LSP) could earn due to increased demand.  The goal would be a world of hundreds of thousands to millions of community banks running fedimint and inter-operating over the lightning network. ","version":"Next","tagName":"h2"},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/docs/intro","content":"Getting Started info This guide has been developed as a community project and is a live document. We would appreciate any feedback you may have and you can submit edits, corrections and pull requests through the link at the bottom of each page. Let’s build the future of Bitcoin custody together! Imagine a world where your community becomes its own bank, collectively managing and transacting Bitcoin while prioritizing privacy and accountability. That’s the power of Fedimint. Fedimint is a modular, open-source protocol that reimagines how communities’ custody and transact Bitcoin. With privacy at its core, it empowers everyday people to take control of their financial future—together. If you’re already comfortable self-custodying your Bitcoin and running your own nodes, fantastic! Keep doing that. But for those seeking an alternative to third-party custodians, Fedimint provides a robust and community-focused solution. Fedimint unlocks new possibilities for Bitcoiners by bringing together trust, accountability, and privacy under one powerful protocol. It transforms Bitcoin custody from an individual task to a shared responsibility. Think of it as community banking—but with Bitcoin, greater privacy, and no central bank. Here’s a quick tour to get you up to speed on the Fedimint protocol. We’ll break down key concepts, trade-offs, technologies, and essential terms so you can navigate this innovative solution with confidence. We close this tour with an overview of several use cases we believe Fedimint can help with. Our goal is simple: make understanding Fedimint as easy and engaging as possible.This documentation explains how Fedimint works, in a manner that is easily digestible by a non technical audience, inspired by the bitcoin.org wiki. The following high level overview of the documentation was recorded for the bitcoin design community on 20th September 2022—and we’re just getting started. Now it’s your turn. Thank you for being part of this exciting journey. Together, we’ll shape a future where communities reclaim their financial power through Bitcoin.","keywords":"","version":"Next"},{"title":"Fedimint","type":0,"sectionRef":"#","url":"/docs/MiniMintDetails/MinimintDemo","content":"Fedimint Fedimint is a modular federated eCash prototype still under heavy development written in Rust. It already supports all main operations (deposit/withdraw via both on-chain Bitcoin and Lightning, as well as eCash transfers) and comes with a rudimentary CLI client. Some features are still missing and blocking mainnet deployments, but the project is moving quickly. If you are interested in contributing check out the GitHub repository. This section contains the original architecture details shared on the Fedimint implementation.","keywords":"","version":"Next"},{"title":"Fedimint Architecture","type":0,"sectionRef":"#","url":"/docs/MiniMintDetails/Architecture","content":"","keywords":"","version":"Next"},{"title":"The Main Loop​","type":1,"pageTitle":"Fedimint Architecture","url":"/docs/MiniMintDetails/Architecture#the-main-loop","content":"The main functionality is implemented in one big loop shown below.  A BFT consensus algorithm is used to agree on a set of consensus items. These consist of transactions submitted by clients and other data proposed by modules. This globally agreed-upon set is then split into module-specific items and transactions. Module specific items are given to the respective modules first to prepare them for the consensus round. After that the transactions are processed by checking that the sum of input amounts is greater than or equal to outputs plus fees. If that is the case, the inputs and outputs are delegated to their respective module for processing. If any is deemed invalid by a module (e.g. invalid signature) the transaction is discarded. After all transactions have been processed, the next consensus proposal is prepared. It consists of transactions submitted by clients and module specific items. ","version":"Next","tagName":"h2"},{"title":"Modules​","type":1,"pageTitle":"Fedimint Architecture","url":"/docs/MiniMintDetails/Architecture#modules","content":"Each module defines an input, output and consensus item type. Modules also keep their own state using the same key-value store as Fedimint. See the database documentation for more information. Module\tInput\tOutput\tConsensus ItemsFediWallet\tDeposit\tWithdrawal\t- Block height, fees and randomness beacon - Signatures for withdrawal transactions FediMint\tCoin spend\tCoin issuance\t- Partial blind signatures of issued coins ","version":"Next","tagName":"h2"},{"title":"Client Interaction​","type":1,"pageTitle":"Fedimint Architecture","url":"/docs/MiniMintDetails/Architecture#client-interaction","content":"Clients communicate with federation members via a REST API. They are expected to communicate with as many members as necessary for the required assurances since some might be malicious. Communication is asynchronous. First, clients submit a transaction. After that they can query the transaction’s status. If the transaction is found to be faulty, the status will be error and the transaction will not be submitted to the consensus. Once a transaction was included in a consensus round its state changes from proposed to accepted or error in case there was a previously undetected problem (e.g. quick double spend). Note that the accepted state is not final. Depending on the module, outputs may need further action, e.g. generating blind signatures or actually submitting a withdrawal transaction. These will show up in the status as they become available. ","version":"Next","tagName":"h2"},{"title":"Fedimint Consensus","type":0,"sectionRef":"#","url":"/docs/MiniMintDetails/Consensus","content":"Fedimint Consensus Because it takes such a central part in a federated mint, we will begin with explaining the properties ofByzantine Fault Tolerant (BFT) consensus algorithms. A byzantine fault does not only allow a party to go offline, but also to maliciously continue participating in the protocol. In the following we will use nnn as the total number of participants in a protocol and fff as the maximum amount of faulty ones among them. We define a BFT consensus algorithm as an algorithm that allows all honest parties to agree on a common set of items as long as less or equal than fff of the participants are malicious. These items may be contributed by any participant and there should be no risk of targeted censorship of items. One such protocol is AlephBFT. We will mainly use it as a reference for BFT consensus properties but note that similar but more efficient ones exist (most notably Dumbo and hybrids built on top of it). We generally assume the consensus to run in rounds, producing a common subset of the contributions made by the participants. At the start of each round each participant iii is expected to propose a set of items CiC_iCi​ to the consensus. After the BFT consensus algorithm has finished (note: this involves a lot of back-and-forth communication which we ignore for now) every honest participant learns the same subset C⊆{C1,…,Cn}C \\subseteq \\{C_1, \\dots, C_n\\}C⊆{C1​,…,Cn​} The consensus set CCC contains at least n−fn-fn−f contributions from different participants. Note how this implies that if more than fff participants propose the same item, the said item is guaranteed to be included in the next consensus output. The consensus protocols we are discussing, asynchronous ones, can only handle about 13\\frac{1}{3}31​ faulty nodes, so this will also be our assumption when building our protocol on top if not stated otherwise.","keywords":"","version":"Next"},{"title":"Custodial Risk","type":0,"sectionRef":"#","url":"/docs/TradeOffs/NotYourKeys","content":"","keywords":"","version":"Next"},{"title":"The Risk​","type":1,"pageTitle":"Custodial Risk","url":"/docs/TradeOffs/NotYourKeys#the-risk","content":"The risk with letting other people hold your bitcoin keys has always been the risk of catastrophic failure through one of several concerns, for example: The custodian simply refuses to give your bitcoin back or steals it.The custodian loses access to your bitcoin and can't return them when required.The custodian is big enough to be a &quot;honeypot&quot; that is hacked and loses access to your bitcoin.The custodian is impaired by government regulation and has to give up access to your bitcoin (covered separately in trade off 3). Whilst the likelihood of each of these scenarios differs depending on the implementation of the mint, the end result is always the same, you lose access to your bitcoin, which can represent a significant part of your savings. ","version":"Next","tagName":"h2"},{"title":"The Mitigation​","type":1,"pageTitle":"Custodial Risk","url":"/docs/TradeOffs/NotYourKeys#the-mitigation","content":"As outlined in &quot;Why Fedimint&quot; the purpose of the protocol is not necessarily to convince existing bitcoiners to give up on their self custody, but instead to move more custodial bitcoin out of centralized services and into Community Custody.  Where users are comfortable and capable with self custody, this remains a better solution for eliminating this risk. There are, however, some options to mitigate this risk. First some context: In Fedimint you make some trade offs to your custody arrangements in return for benefits that include: Privacy preserving payments;Privacy preserving community custody;Simplified back up and recovery operations;Simple user experience and convenience. This may or may not be an adequate trade off on the face of it, but we can also take the following mitigating actions. ","version":"Next","tagName":"h2"},{"title":"Know your Federation​","type":1,"pageTitle":"Custodial Risk","url":"/docs/TradeOffs/NotYourKeys#know-your-federation","content":"It is important that the user has direct knowledge of the guardians running their federation and it is highly recommended that you only join federations where some or all of the guardians are people that you have a strong pre-existing relationship with or trust in. Rather than KYC (Know Your Customer) Fedimint promotes KYF (Know your Friend / Know your Family / Know Your Federation). For example, if I ran a Federation for my family and friends I am highly unlikely to run off with the money due to the high level of social costs which are attached to the action. The likelihood of this risk is increased where you have a more distant relationship with the federation guardians. ","version":"Next","tagName":"h3"},{"title":"Limit Exposure​","type":1,"pageTitle":"Custodial Risk","url":"/docs/TradeOffs/NotYourKeys#limit-exposure","content":"A second mitigation would be to limit the exposure of funds to the federation guardians in terms of both size and time. For instance, keeping only smaller amounts of satoshis in larger federations, or when larger denominations are needed, moving the coins in only for a short period to cover the spending. ","version":"Next","tagName":"h3"},{"title":"Fedimint Wallet","type":0,"sectionRef":"#","url":"/docs/MiniMintDetails/Wallet","content":"","keywords":"","version":"Next"},{"title":"Chain tip consensus​","type":1,"pageTitle":"Fedimint Wallet","url":"/docs/MiniMintDetails/Wallet#chain-tip-consensus","content":"To validate transactions, a wallet needs to know the current chain tip. The problem with this is that different federation members might see different chain tips either due to latency or even shallow forks. To avoid the forking problem we can just define that our internal chain tip is always e.g. 100 blocks behind the real one. This should sufficiently mitigate the risk of being on different forks (bitcoin itself would be in trouble with such deep forks). But the latency problem remains. To solve this we use the consensus, each round each participant does the following: Query bitcoind for the current block heightIf the block height shrank, use the previous onePropose height - 100 as the consensus heightReceive peer proposals and use median as the new consensus height Due to the assumption that less than 13\\frac{1}{3}31​ of the participants are malicious, this will always lead to a value that either was proposed by an honest participant or lies between two honest values to be chosen. Let's say that all fff malicious proposals and n−2fn-2fn−2f honest proposals are accepted, then f&lt;n−2ff &lt; n-2ff&lt;n−2f due to the previous requirement. It is easy to see that the fff malicious proposals do not suffice to meaningfully alter the median. Of course this assumes that all honest participants stay reasonably close to the real chain tip, but this is the task of the operators and outside our protocol. ","version":"Next","tagName":"h2"},{"title":"Fee consensus​","type":1,"pageTitle":"Fedimint Wallet","url":"/docs/MiniMintDetails/Wallet#fee-consensus","content":"We also face a similar problem when spending Bitcoin. While the destinations and amounts are generally assumed to be outputs of the consensus protocol and thus unproblematic, one factor of transactions is not easily made deterministic: the fees. To avoid depletion attacks by overpaying fees we need to agree on them. Naively we could use an algorithm that uses on-chain analysis to determine proper fee levels. But we only agree on a tip buried 100 blocks deep, which would make the algorithm quite unresponsive. Furthermore other algorithms that take the mempool into account may be preferable, but agreeing on the mempool is a fool's errand. Instead, we use a modified version of the algorithm used for the chain tip consensus. During each round each participant does the following: Query bitcoind for the current optimal fee ratePropose said rate as the consensus fee rateReceive peer proposals and use median as the new consensus height The median argument works similarly and we achieve an honest consensus on fee rates. ","version":"Next","tagName":"h2"},{"title":"Randomness beacon​","type":1,"pageTitle":"Fedimint Wallet","url":"/docs/MiniMintDetails/Wallet#randomness-beacon","content":"In some cases it is useful to have access to agreed-upon, fair randomness. Thus every round every participant also proposes 32bytes of random data. The ones included in the consensus outcome are then XORed to form the round's randomness beacon. It is important to note that this is only safe if the items proposed to the consensus are encrypted till there is agreement on which contributions will be included. This is the case for AlephBFT. Otherwise an attacker could wait for the other participants to announce their contributions and then adaptively choose his own to influence the outcome. ","version":"Next","tagName":"h2"},{"title":"Address Derivation​","type":1,"pageTitle":"Fedimint Wallet","url":"/docs/MiniMintDetails/Wallet#address-derivation","content":"To allow clients to generate deposit addresses independent of the federation we do not use BIP32 derivation to generate new addresses from the wallet descriptor, but a custom derivation scheme. We instead use a pay-to-contract construction where a &quot;contract&quot; is hashed and added to all keys in the descriptor (added in the exponent in case of the pub key). A descriptor with derived keys can then trivially be transformed into an address. In Fedimint the &quot;contract&quot; is just a public key that can later be used to tie the deposit to an issuance transaction. ","version":"Next","tagName":"h2"},{"title":"Receiving Bitcoin​","type":1,"pageTitle":"Fedimint Wallet","url":"/docs/MiniMintDetails/Wallet#receiving-bitcoin","content":"When depositing Bitcoin into the federation a client proceeds as follows: Generate public/secret key pairTweak federation descriptor with public keySend BTC to the resulting addressGenerate TxOutProof and fetch raw transaction. These compact data structures allow the federation to verify the deposit with only the block hashes being synced and not the whole chain.The tweak, together with the TxOutProof and the raw transaction, can now be sent to the federation to prove money was deposited. The federation should require a signature using the secret key. Note that only once the federation is in possession of the tweak can they actually spend the funds as it is also needed to tweak the private keys. ","version":"Next","tagName":"h2"},{"title":"Sending Bitcoin​","type":1,"pageTitle":"Fedimint Wallet","url":"/docs/MiniMintDetails/Wallet#sending-bitcoin","content":"Once the federation agrees on paying Bitcoin to a set of destinations, every participant deterministically selects the necessary outputs. The previously agreed-upon fee rate is used to determine the fee. In case a change address is needed, the randomness beacon is used to derive a random change address just as a deposit address would be derived. This transaction is then signed by each participant individually and the signatures broadcasted via the consensus protocol. Note that due to the transaction being generated deterministically it does not need to be exchanged itself. After receiving sufficient signatures, each party can assemble the final transaction and broadcast it. ","version":"Next","tagName":"h2"},{"title":"Regulatory Risk","type":0,"sectionRef":"#","url":"/docs/TradeOffs/RegulatoryRisk","content":"Regulatory Risk caution This guide has been developed as a community project and is a live document. We would advise you to fully consider your own risk model and mitigations before running Fedimint. We also appreciate any feedback you may have and you can submit edits, corrections and pull requests through the link at the bottom of each page. The Fedimint protocol has been designed to fit a particular regulatory niche. One in which people custody assets for friends, family and community interests, where there is no profit motive. This risk deals with the threat of changing regulations, meaning this is no longer the case, and the mint is forced to shut down or divulge user information. This is a nuanced area that will need to be explored on a per Fedimint basis dependant on the laws in the local jurisdiction and the way a Fedimint is set up and operated. However, most jurisdictions that regulate Bitcoin financial activities have exemptions for financial related activities that are not done by way of business. There are a number of reasons for this but one is that it is normal for individuals to perform financial activities on behalf of friends and family and to require these activities to be regulated would quickly overwhelm any regulatory body. Imagine if anyone holding money for their child in a piggy bank would have to become a regulated custodian, or if to accept money from your friend to buy something for them from the local convenience store you’d need to register as a payment institute! The most commonly envisaged model for a Fedimint community is one made of pre-existing trusted guardians and users and where the guardians are not providing the service to make a profit but to help ensure that their and their friends’ bitcoins are kept safely and privately. Furthermore, no one guardian retains total control over a user’s funds. The UK FCA has a helpful flowchart showing their process for determining whether or not an organisation needs to be regulated. However, it should go without saying that if you are worried about this, you should definitely seek legal advice in your local jurisdiction. The protocol is flexible enough to support human rights groups in high threat environments. note It is up to the federation guardians to consider the legal and regulatory implications of the deployment considered.","keywords":"","version":"Next"},{"title":"Debasement Risk","type":0,"sectionRef":"#","url":"/docs/TradeOffs/DebasementRisk","content":"","keywords":"","version":"Next"},{"title":"The Risk​","type":1,"pageTitle":"Debasement Risk","url":"/docs/TradeOffs/DebasementRisk#the-risk","content":"This risk to a user is that they may be left holding eCash notes, that are not matched to bitcoin in the federation vault. This risk is caused by a balance sheet audit and verification problem that exists in eCash due to the anonymous nature of blinded eCash notes. To expand on this, at all times the mint has both assets and liabilities which should balance: Assets: The bitcoin held in the on chain multi signature wallet controlled by the federation guardians.Liabilities: The outstanding number of eCash notes that have been issued by the mint.  The guardians of the federation have access to the required information that allows them to balance the books between the eCash outstanding and the assets held on chain. For the user however, whilst they can see the assets on chain, they have no view of the total number of outstanding liabilities and so the user is always &quot;unable to verify&quot; the total asset and liability balance of the federation, as such they are trusting the guardians to manage this balance. This mismatch is at the core of this risk as it means that no external party to the guardians can audit the supply and marks the importance of strong 2nd party trust in federation guardians. info For completeness this risk also exists in any custodial bitcoin arrangement (for example with exchanges) in which the user gives up access to their keys. ","version":"Next","tagName":"h2"},{"title":"The Corrupt Quorum Problem​","type":1,"pageTitle":"Debasement Risk","url":"/docs/TradeOffs/DebasementRisk#the-corrupt-quorum-problem","content":"This is complicated further if we consider the situation in which there is a &quot;corrupt quorum&quot; of guardians. Only guardians are able to create and sign false claims and this is done with a threshold of guardians requiring many corrupt guardians. So in order to realize this risk in a Fedimint, a quorum of corrupt guardians (66% or in our figure guardian 1 &amp; 2) would need to collude to create new eCash notes that had no bitcoin backing as shown below.  Three points to make at this point are: No additional bitcoins exist, only additional claims to bitcoin that circulate within a specific limited economic community.This is a fraud exercised by a subset of federation guardians on both the Fedimint users who have honestly deposited funds (loss of funds impact) and the honest Guardian (reputation impact).In order to realize this fraud the corrupt quorum of guardians will need to exercise a redemption of the &quot;false eCash claims&quot;. To understand the impact we need to consider how corrupt guardians would redeem these false &quot;claims&quot; on the bitcoin. These claims could be transferred to any of the parties who accept fm-BTC: The Mint: To redeem for bitcoin from the multisig.Merchants / Users: In exchange for goods and services.LN Gateway: In exchange for making and receiving lightning payments (Mint issues eCash and pays out to itself via LN, gateway racks up IOUs and would start redeeming against the bitcoin supply - so we're back to why not steal the bitcoin?) The corrupt guardians could take any one, or all three of these exits. Exit 1: The Mint​ To exit this attack via the mint the corrupt guardians are using the claims to remove bitcoin from the mint, without alerting the remaining honest guardian. It should be noted at this point that the same group could empty the mint directly if they are a quorum on the multi-sig vault. This would be a higher pay off strategy, but would instantly alert the remaining guardian and so be instantly obvious within the community. A lower value theft could occur without alert where the corrupt guardians redeem a smaller amount of bitcoin over time. As more bitcoin is withdrawn this increases the chances of a collapse of the Fedimint. Exit 2: Defraud Merchants / Users​ This attack would involve issuing fake eCash and using this in the local economy in exchange for goods and services. A &quot;mint eats free attack&quot;. Here the corrupt guardians are able to acquire real world goods and services from others in the federation at zero cost. This introduces a risk of collapse on the Fedimint. Exit 3: LN Gateway​ The LN gateway attack is similar to attack two, only instead of cashing out to real world goods the claims are paid to the LN gateway in order to pay invoices over lightning e.g. to the corrupt guardians external lightning wallet. This version, has potentially more risk for the corrupt guardians as it is expected that LN gateways would more frequently redeem these eCash notes for on-chain bitcoin than a user / merchant in order to balance liquidity. In this way an LN Gateway could also act as an early warning on mint liquidity, where a trend is observed of bitcoin constantly flowing out of the mint and not being received inbound. ","version":"Next","tagName":"h3"},{"title":"Impact​","type":1,"pageTitle":"Debasement Risk","url":"/docs/TradeOffs/DebasementRisk#impact","content":"The impact of this activity is two fold: Mint Collapse: Over a period of time more fm-BTC claims would be held by the users than exist in the multi-sig. This leads to fragility and eventually collapse of the Fedimint when the redemption's exceed the bitcoin in the mint.Reputation Loss: The local reputation of the corrupt guardians would be destroyed, quite rightly. Unfortunately this would also likely impact the honest guardian as it would not be possible to confirm which quorum of guardians were dishonest. ","version":"Next","tagName":"h3"},{"title":"The Mitigation​","type":1,"pageTitle":"Debasement Risk","url":"/docs/TradeOffs/DebasementRisk#the-mitigation","content":"info This section is under active review. PRs and discussions are appreciated on the Fedimint telgram, discord or github. In mitigating this risk we should consider the options to both stop false claims and raise the alarm on discovery of false claims. Whilst several mitigation activities will be outlined, the tl;dr is that a user can't verify the holdings of the mint, however, several activities and alerts can be built around the mint to trigger warnings of misconduct. ","version":"Next","tagName":"h2"},{"title":"In Mint Audits​","type":1,"pageTitle":"Debasement Risk","url":"/docs/TradeOffs/DebasementRisk#in-mint-audits","content":"During each consensus epoch, code is in place to balance the known assets and liabilities of the mint. This will allow guardians to monitor for bugs which cause debasements and raise the alarm / act accordingly. It should be noted that if there is a quorum of bad guardians then these liabilities would be &quot;unknown&quot; to the Fedimint and so would not be identified by this process. ","version":"Next","tagName":"h3"},{"title":"Guardian \"Mexican Stand-off\"​","type":1,"pageTitle":"Debasement Risk","url":"/docs/TradeOffs/DebasementRisk#guardian-mexican-stand-off","content":"An honest guardian could track the volume and value of eCash notes that have been signed whilst they have been in the quorum. They would also be aware of their own up-time. Using these two data points they could estimate the likelihood of debasement if the level of redemptions to the mint causes concern and can raise alarm on the increased rate of redemptions. ","version":"Next","tagName":"h3"},{"title":"Know Your Federation​","type":1,"pageTitle":"Debasement Risk","url":"/docs/TradeOffs/DebasementRisk#know-your-federation","content":"You're already trusting the mint with all of your bitcoin. As such you should only utilise federations that you personally know and trust with your funds. The main line of defence against debasement risk is choosing to only place your bitcoin in the hands of honest guardians. ","version":"Next","tagName":"h3"},{"title":"Threshold signatures on eCash Issuance & Redemption​","type":1,"pageTitle":"Debasement Risk","url":"/docs/TradeOffs/DebasementRisk#threshold-signatures-on-ecash-issuance--redemption","content":"It is possible (and recommended) to separate both the key sets and thresholds required to perform transaction signing and management of the multi-signature vault. In effect this means you can set a higher threshold of trust for users to redeem the on-chain bitcoin from the mint. This protects users. ","version":"Next","tagName":"h3"},{"title":"Bank Runs​","type":1,"pageTitle":"Debasement Risk","url":"/docs/TradeOffs/DebasementRisk#bank-runs","content":"As a user could be a member of multiple federations there could be consideration given to allow users to automate bank runs from one federation to another to regularly stress test the solvency of the Fedimint. ","version":"Next","tagName":"h3"},{"title":"Re-keying Event​","type":1,"pageTitle":"Debasement Risk","url":"/docs/TradeOffs/DebasementRisk#re-keying-event","content":"It is possible to perform an attestation to show that the number of issued notes and the Bitcoin balance held by the federation match at points when a “re-keying checkpoint” is made. This is a mechanism to periodically switch out private keys and prevent database bloat. Users are required to exchange their old notes for new ones before each such re-keying checkpoint. This limits the frequency with which the procedure can be performed. ","version":"Next","tagName":"h3"},{"title":"In App Monitoring​","type":1,"pageTitle":"Debasement Risk","url":"/docs/TradeOffs/DebasementRisk#in-app-monitoring","content":"In app monitoring of LN flows and redemption's could be used to trigger early warning signs for &quot;strange activitiy&quot; within the mint. This could provide users an opportunity to conduct a &quot;bank run&quot; on the Fedimint or trigger a re-keying event to prove solvency. ","version":"Next","tagName":"h3"},{"title":"Existing Risk​","type":1,"pageTitle":"Debasement Risk","url":"/docs/TradeOffs/DebasementRisk#existing-risk","content":"This is just to note that this risk already exists in bitcoin with respect to the notion of exchanges and large custodians, who could already engage in fractional reserve banking. ","version":"Next","tagName":"h3"},{"title":"Trust Model Trade Offs","type":0,"sectionRef":"#","url":"/docs/TradeOffs/Trust-Trade-Offs","content":"","keywords":"","version":"Next"},{"title":"The Risks​","type":1,"pageTitle":"Trust Model Trade Offs","url":"/docs/TradeOffs/Trust-Trade-Offs#the-risks","content":"The trade offs in the trust model have been captured as five key risks as outlined below1 and explored in more detail on the following pages.  Custodial Risk: Can the federation steal or lose your funds. Debasement Risk: Can the federation issue more claims to bitcoin than they own. Regulatory Risk: Can the federation be unilaterally shut down or forced to cease operations.LN Gateway Censorship Risk: What are the risks in LN gateways refusing service to mint users.Transaction Censorship Risk: In what instance could a federation refuse service.  This is under constant revision, please raise further trade offs for consideration.↩ ","version":"Next","tagName":"h2"},{"title":"Continued Operation Risk","type":0,"sectionRef":"#","url":"/docs/TradeOffs/Transaction-Contract-Fulfilment","content":"Continued Operation Risk caution This guide has been developed as a community project and is a live document. We would advise you to fully consider your own risk model and mitigations before running Fedimint. We also appreciate any feedback you may have and you can submit edits, corrections and pull requests through the link at the bottom of each page. The user must trust a majority quorum of federation members to custody funds, redeem funds and enforce contracts within the mint. This is in effect an operational risk. The idea that once I have committed my funds to the Federation, there is a risk that I will be unable to redeem or spend my coins at my discretion. This would be a failure of the mint to operate either through (1) operational failure or (2) malice. With regards to (1), this is mitigated through the deployment of a federation, as only a sub group of guardians needs to be online at any point in time in order to transact. This allows for some hardware failures, downtime or reboots to occur. Considering (2), this needs to be mitigated through a process of &quot;knowing your federation&quot;. Please only commit funds to guardians you believe you can trust.","keywords":"","version":"Next"},{"title":"LN Gateway Risk","type":0,"sectionRef":"#","url":"/docs/TradeOffs/TrustLNGateways","content":"LN Gateway Risk caution This guide has been developed as a community project and is a live document. We would advise you to fully consider your own risk model and mitigations before running Fedimint. We also appreciate any feedback you may have and you can submit edits, corrections and pull requests through the link at the bottom of each page. Lightning Gateways provide a service to the federation users which allows them to connect with the wider bitcoin ecosystem. Without this service, the ability to transact is heavily impaired which will impact the user experience of the Fedimint user. The focus of this risk is on the situation in which an LN Gateway restricts service to Fedimint users through either (1) technical issue or (2) malice. Both situations carry a similar impact profile, in that the users of the Fedimint may not be able to transact outside the boundary of their mint. This is not a loss of funds, but an impairment of some functionality. The first line of mitigation in this instance is for the user to simply select a new LN gateway, as a mint could have more than 1 gateway. As such if an LN gateway was down due to malice or technical issues the user's wallet would simply utilise an alternate LN gateway. Also it should be noted that the LN gateway represents an economic actor in the system. As such, the incentive is for the LN gateway to continue processing payments in order to earn fees. As such the incentives are aligned for LN Gateways to continue routing payments, or in the presence of malice for an honest actor to step in and earn the fee revenue. In a fall back situation in which none of the mint gateways are routing LN payment, any single user of the mint could setup a lightning node and provide this service for the rest of the mint.","keywords":"","version":"Next"}]